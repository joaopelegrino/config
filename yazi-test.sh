#!/bin/bash

# ‚ö° Script de Teste do Yazi - Ambiente de Desenvolvimento
# Testa as configura√ß√µes e integra√ß√µes do Yazi

echo "üöÄ Testando configura√ß√£o do Yazi..."
echo "=========================================="

# Verifica se o Yazi est√° instalado
echo "1. Verificando instala√ß√£o do Yazi..."
if command -v yazi &> /dev/null; then
    echo "‚úÖ Yazi encontrado: $(which yazi)"
    yazi --version
else
    echo "‚ùå Yazi n√£o encontrado no PATH"
    exit 1
fi

echo ""

# Verifica arquivos de configura√ß√£o
echo "2. Verificando arquivos de configura√ß√£o..."

CONFIG_DIR="/home/joao/.config/yazi"
if [ -d "$CONFIG_DIR" ]; then
    echo "‚úÖ Diret√≥rio de configura√ß√£o existe: $CONFIG_DIR"
    
    # Lista arquivos de configura√ß√£o
    echo "üìÅ Arquivos de configura√ß√£o encontrados:"
    ls -la "$CONFIG_DIR"
else
    echo "‚ùå Diret√≥rio de configura√ß√£o n√£o encontrado"
fi

echo ""

# Verifica arquivos espec√≠ficos
echo "3. Verificando arquivos espec√≠ficos..."

files=(
    "yazi.toml:Configura√ß√£o principal"
    "keymap.toml:Mapeamento de teclas"
    "theme.toml:Tema personalizado"
)

for file_desc in "${files[@]}"; do
    IFS=':' read -r file desc <<< "$file_desc"
    if [ -f "$CONFIG_DIR/$file" ]; then
        echo "‚úÖ $desc: $CONFIG_DIR/$file"
        echo "   Tamanho: $(stat -c%s "$CONFIG_DIR/$file") bytes"
        echo "   Modificado: $(stat -c%y "$CONFIG_DIR/$file")"
    else
        echo "‚ùå $desc n√£o encontrado: $CONFIG_DIR/$file"
    fi
done

echo ""

# Verifica depend√™ncias opcionais
echo "4. Verificando depend√™ncias opcionais..."

deps=(
    "fd:Busca r√°pida de arquivos"
    "rg:Busca em conte√∫do (ripgrep)"
    "fzf:Fuzzy finder"
    "bat:Visualizador de c√≥digo"
    "eza:Listagem de arquivos moderna"
    "git:Controle de vers√£o"
    "vim:Editor de texto"
    "code:VS Code"
)

for dep_desc in "${deps[@]}"; do
    IFS=':' read -r cmd desc <<< "$dep_desc"
    if command -v "$cmd" &> /dev/null; then
        echo "‚úÖ $desc: $(which $cmd)"
    else
        echo "‚ö†Ô∏è  $desc n√£o encontrado (opcional): $cmd"
    fi
done

echo ""

# Testa fun√ß√£o yy() do zsh
echo "5. Verificando integra√ß√£o com shell..."
if [ -n "$ZSH_VERSION" ]; then
    echo "‚úÖ Executando em ZSH"
    if declare -f yy > /dev/null; then
        echo "‚úÖ Fun√ß√£o yy() est√° carregada (integra√ß√£o cd)"
    else
        echo "‚ö†Ô∏è  Fun√ß√£o yy() n√£o encontrada - reinicie o shell"
    fi
else
    echo "‚ÑπÔ∏è  Shell atual: $SHELL (n√£o √© ZSH)"
fi

echo ""

# Testa aliases
echo "6. Verificando aliases do Yazi..."
aliases=(
    "y:Alias para yazi"
    "fm:Alias para file manager"
    "yc:Yazi config directory"
    "yw:Yazi workspace directory"
    "yh:Yazi home directory"
)

for alias_desc in "${aliases[@]}"; do
    IFS=':' read -r alias_name desc <<< "$alias_desc"
    if alias "$alias_name" &> /dev/null; then
        echo "‚úÖ $desc: $(alias $alias_name)"
    else
        echo "‚ö†Ô∏è  $desc n√£o encontrado: $alias_name"
    fi
done

echo ""

# Verifica cache e diret√≥rios de trabalho
echo "7. Verificando diret√≥rios de cache..."
CACHE_DIR="/home/joao/.cache/yazi"
if [ -d "$CACHE_DIR" ]; then
    echo "‚úÖ Cache do Yazi: $CACHE_DIR"
    echo "   Conte√∫do: $(ls -la "$CACHE_DIR" 2>/dev/null | wc -l) itens"
else
    echo "‚ÑπÔ∏è  Cache ser√° criado automaticamente em: $CACHE_DIR"
fi

echo ""

# Verifica completions do zsh
echo "8. Verificando completions..."
COMPLETION_FILE="/usr/share/zsh/site-functions/_yazi"
if [ -f "$COMPLETION_FILE" ]; then
    echo "‚úÖ Completions do ZSH instalados: $COMPLETION_FILE"
else
    echo "‚ö†Ô∏è  Completions n√£o encontrados (n√£o cr√≠tico)"
fi

echo ""

# Teste b√°sico de funcionalidade
echo "9. Teste b√°sico de funcionalidade..."
if yazi --help > /dev/null 2>&1; then
    echo "‚úÖ Yazi responde a comandos b√°sicos"
else
    echo "‚ùå Yazi n√£o responde adequadamente"
fi

echo ""

# Resumo e instru√ß√µes
echo "üéØ RESUMO E PR√ìXIMOS PASSOS"
echo "=========================================="
echo ""
echo "‚úÖ Para usar o Yazi:"
echo "   ‚Ä¢ Digite 'yazi' ou 'y' para abrir"
echo "   ‚Ä¢ Use 'yy' para navegar com cd integrado"
echo "   ‚Ä¢ Atalhos: 'yc' (config), 'yw' (workspace), 'yh' (home)"
echo ""
echo "‚å®Ô∏è  Atalhos principais no Yazi:"
echo "   ‚Ä¢ j/k: navegar para baixo/cima"
echo "   ‚Ä¢ h/l: voltar/entrar em diret√≥rio"
echo "   ‚Ä¢ o: abrir arquivo"
echo "   ‚Ä¢ ,v: abrir com Vim"
echo "   ‚Ä¢ ,c: abrir com VS Code"
echo "   ‚Ä¢ s: buscar arquivos (fd)"
echo "   ‚Ä¢ S: buscar conte√∫do (ripgrep)"
echo "   ‚Ä¢ q: sair"
echo "   ‚Ä¢ ~: ajuda completa"
echo ""
echo "üîß Se algo n√£o funcionar:"
echo "   ‚Ä¢ Reinicie o terminal: exec zsh"
echo "   ‚Ä¢ Recarregue configura√ß√µes: source ~/.zshrc"
echo "   ‚Ä¢ Execute novamente: $0"
echo ""

# Status final
if command -v yazi &> /dev/null && [ -f "$CONFIG_DIR/yazi.toml" ]; then
    echo "üéâ Yazi est√° pronto para uso!"
    exit 0
else
    echo "‚ö†Ô∏è  Configura√ß√£o incompleta - verifique os erros acima"
    exit 1
fi
